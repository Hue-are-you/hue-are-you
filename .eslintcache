[{"C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\hue-are-you\\src\\index.js":"1","C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\hue-are-you\\src\\reportWebVitals.js":"2","C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\hue-are-you\\src\\App.js":"3","C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\hue-are-you\\src\\LoadingText.js":"4"},{"size":517,"mtime":1607463403613,"results":"5","hashOfConfig":"6"},{"size":375,"mtime":1607463403614,"results":"7","hashOfConfig":"6"},{"size":9067,"mtime":1607478770956,"results":"8","hashOfConfig":"6"},{"size":27980,"mtime":1607478474519,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1m08144",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\hue-are-you\\src\\index.js",[],["20","21"],"C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\hue-are-you\\src\\reportWebVitals.js",[],"C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\hue-are-you\\src\\App.js",["22"],"import { Component } from 'react';\r\nimport video from './assets/smoke.mp4';\r\nimport paint from './assets/paint-splash.png';\r\nimport axios from 'axios';\r\nimport LoadingText from './LoadingText.js';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      play: false,\r\n      fadeOut: false,\r\n      mainText: false,\r\n      userBrandInput: '',\r\n      url: '',\r\n      title: '',\r\n      artist: '',\r\n      colors: [],\r\n      finalColours: [],\r\n      rijksColors: [\"#737C84\", \"#FBF6E1\", \"#2F4F4F\", \"#E0CC91\", \"#000000\", \"#B5BFCC\", \"#B35AIF\", \"#F6ECF3\", \"#981313\", \"#F49B7A\", \"#2F4F4F\", \"#DDA5AA\", \"#E09714\", \"#367614\", \"#4019B1\", \"#4279DB\", \"#DE4153\", \"#62AD77\", \"#8268DC\", \"#850085\", \"#DF4C93\", \" #FFEB00\" ]\r\n    }\r\n  }\r\n\r\n  playVideo = () => {\r\n    this.setState({\r\n      play: true,\r\n      fadeOut: true,\r\n      mainText: true\r\n    })\r\n  }\r\n\r\n  // normalizeColors = (color) => {\r\n  //   const nearestColor = require('nearest-color').from(this.state.rijksColors);\r\n  //   console.log(\"nearestColor\", nearestColor);\r\n  //   nearestColor(color);\r\n  // }\r\n\r\n\r\n  // what to do when user clicks desired colour\r\n  handleSwatch = (e) => {\r\n    e.preventDefault();\r\n    //  go to the art page\r\n    const chosenColor = e.target.className\r\n    console.log(chosenColor);\r\n    \r\n    axios({\r\n      url: `https://www.rijksmuseum.nl/api/en/collection`,\r\n      method: `GET`,\r\n      responseType: `json`,\r\n      params: {\r\n        key: 'wMbWv135',\r\n        'f.normalized32Colors.hex': \"#DDA5AA\",\r\n        imgOnly: true,\r\n        // hex: chosenColor\r\n        // ^ or whatever hex value user chooses\r\n      }\r\n    })\r\n      .then((res) => {\r\n        // console.log(res)\r\n        const artResults = res.data.artObjects\r\n        // console.log(\"artResults\", artResults);\r\n        const artArray = [];\r\n        artResults.map((art, index) => {\r\n          \r\n          artArray.push({\r\n            arrUrl: res.data.artObjects[index].webImage.url,\r\n            arrTitle: res.data.artObjects[index].title,\r\n            arrArtist: res.data.artObjects[index].principalOrFirstMaker\r\n          })\r\n\r\n          // console.log(\"artArray\", artArray);\r\n         \r\n          \r\n          const randomIndex = Math.floor(Math.random() * artArray.length)\r\n          const artPiece = artArray[randomIndex]\r\n          this.setState({\r\n              \r\n          url: artPiece.arrUrl,\r\n          title: artPiece.arrTitle,\r\n          artist: artPiece.arrArtist\r\n            })\r\n          \r\n        })\r\n\r\n        // this.setState({\r\n        //   url: res.data.artObjects[0].webImage.url,\r\n        //   title: res.data.artObjects[0].title,\r\n        //   artist: res.data.artObjects[0].principalOrFirstMaker\r\n        // })\r\n      })\r\n  }\r\n\r\n  // store user brand input in state\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      userBrandInput: e.target.value\r\n    })\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    //   go to the swatches, batches\r\n    axios({\r\n      url: `https://makeup-api.herokuapp.com/api/v1/products.json`,\r\n      method: `GET`,\r\n      responseType: `json`,\r\n      params: {\r\n        // brand: {this.userBrandInput} (maybe state or props)\r\n        brand: `${this.state.userBrandInput}`,\r\n      }\r\n    })\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        const colorsOnly = [];\r\n        for (let i in res.data) {\r\n          // console.log(res.data[i].product_colors);\r\n          const products = res.data[i].product_colors;\r\n          products.forEach((info) => {\r\n            // console.log(info);\r\n            colorsOnly.push(info.hex_value);\r\n            // console.log(colorsOnly);\r\n          })\r\n        }\r\n        // console.log(colorsOnly);\r\n        this.randomColours(colorsOnly)\r\n        this.setState({\r\n          colors: colorsOnly\r\n        })\r\n      })\r\n  }\r\n\r\n  randomColours = (array) => {\r\n    this.setState({\r\n      finalColours: []\r\n    })\r\n    const indexSize = 7\r\n    for (let i = 0; i <= (indexSize - 1); i++) {\r\n      const randomIndex = Math.floor(Math.random() * array.length)\r\n      if (array[randomIndex] !== array[i]) {\r\n        this.state.finalColours.push(array[randomIndex]);\r\n        // console.log(\"SwatchArray\", this.state.finalColours)\r\n      }\r\n    }\r\n    // sometimes repeats... how to fix?\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header id=\"start\">\r\n          <div className=\"banner\">\r\n            <video src={video} autoPlay={this.state.play} loop=\"true\"></video>\r\n            <div className=\"search\">\r\n              <div onClick={this.playVideo} className={this.state.fadeOut ? 'hide' : null}>\r\n                <LoadingText />\r\n              </div>\r\n              <h1 className={this.state.mainText ? 'showText' : null}>Hue are you?</h1>\r\n              <form action=\"\" className={`search-box ${this.state.mainText ? 'showSearch' : null}`}>\r\n                <label htmlFor=\"search\" className=\"sr-only\">Search a make-up brand</label>\r\n                <input id=\"search\" className=\"search-text\" type=\"text\" placeholder=\"Search a make-up brand\" onChange={this.handleChange} />\r\n                <button className=\"search-button\" onClick={this.handleClick} type=\"submit\"><img src={paint} alt=\"paint splash icon\" /></button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        {/* Render swatches: */}\r\n        <section className=\"swatches\">\r\n          <div className=\"wrapper information\">\r\n            <ul>\r\n              {\r\n                this.state.finalColours.map((color, index) => {\r\n                  const styles = {\r\n                    backgroundColor: (color)\r\n                  };\r\n                  // console.log(color);\r\n                  return (\r\n                    <li className=\"swatch\" key={index}>\r\n                      <button style={styles} className={color}onClick={this.handleSwatch}></button>\r\n                      <h2>{color}</h2>\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n            <div class=\"stick\">\r\n              <h3>{this.state.userBrandInput}</h3>\r\n              <div class=\"brush\"></div>\r\n              <div class=\"neck\"></div>\r\n              <div class=\"bristles\">\r\n                <div class=\"tip\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <div>\r\n        <p>hi again</p>\r\n        <img src={this.state.url} alt={`Your makeup, perfectly paired with ${this.state.artist}'s work: '${this.state.title}'`}/>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\n\r\n\r\n  //   what to do when user submits search\r\n  // handleClick = (e) => {\r\n  //   e.preventDefault();\r\n  //   //   go to the swatches, batches\r\n  //   axios({\r\n  //     url: `https://makeup-api.herokuapp.com/api/v1/products.json`,\r\n  //     method: `GET`,\r\n  //     responseType: `json`,\r\n  //     params: {\r\n  //       // brand: {this.userBrandInput} (maybe state or props)\r\n  //       brand: `${this.state.userBrandInput}`,\r\n  //     }\r\n  //   })\r\n  //     .then((res) => {\r\n  //       // console.log(res.data);\r\n  //       const colorsOnly = [];\r\n  //       for (let i in res.data) {\r\n  //         // console.log(res.data[i].product_colors);\r\n  //         const products = res.data[i].product_colors;\r\n  //         products.forEach((info) => {\r\n  //           // console.log(info);\r\n  //           colorsOnly.push(info.hex_value);\r\n  //           // console.log(colorsOnly);\r\n  //         })\r\n  //       }\r\n  //       // console.log(colorsOnly)\r\n  //       this.randomColours(colorsOnly)\r\n  //       if (colorsOnly.length > 7) {\r\n  //         const smallArray = colorsOnly.splice(0, 7);\r\n  //         this.setState({\r\n  //           finalColours: smallArray\r\n  //         })\r\n  //       } else {\r\n  //         const smallArray = colorsOnly;\r\n  //         this.setState({\r\n  //           colors: smallArray\r\n  //         })\r\n  //       }\r\n  //     })\r\n  // }\r\n\r\n  // shuffle = (array) => {\r\n  //   let currentIndex = array.length, temporaryValue, randomIndex;\r\n  //   // While there remain elements to shuffle...\r\n  //   while (0 !== currentIndex) {\r\n  //     // Pick a remaining element...\r\n  //     randomIndex = Math.floor(Math.random() * currentIndex);\r\n  //     currentIndex -= 1;\r\n  //     // And swap it with the current element.\r\n  //     temporaryValue = array[currentIndex];\r\n  //     array[currentIndex] = array[randomIndex];\r\n  //     array[randomIndex] = temporaryValue;\r\n  //   }\r\n  //   return array;\r\n  // }\r\n\r\n  //   what to do when user submits search\r\n\r\n\r\n\r\n  // randomColours = (array) => {\r\n  //   this.setState({\r\n  //     finalColours: []\r\n  //   })\r\n  //   const indexSize = 7\r\n  //   for (let i = 0; i <= (indexSize - 1); i++) {\r\n  //     const randomIndex = Math.floor(Math.random() * array.length)\r\n  //     if (array[randomIndex] !== array[i]) {\r\n  //       this.setState({\r\n  //         finalColours: array\r\n  //       })\r\n  //       // this.state.finalColours.push(array[randomIndex]);\r\n  //       console.log(this.state.finalColours)\r\n  //     }\r\n  //   }\r\n  // }","C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\hue-are-you\\src\\LoadingText.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":64,"column":37,"nodeType":"29","messageId":"30","endLine":64,"endColumn":39},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]