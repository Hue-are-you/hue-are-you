[{"C:\\Users\\ulano\\Desktop\\sites\\juno\\projects\\hue-are-you\\src\\index.js":"1","C:\\Users\\ulano\\Desktop\\sites\\juno\\projects\\hue-are-you\\src\\reportWebVitals.js":"2","C:\\Users\\ulano\\Desktop\\sites\\juno\\projects\\hue-are-you\\src\\App.js":"3","C:\\Users\\ulano\\Desktop\\sites\\juno\\projects\\hue-are-you\\src\\LoadingText.js":"4","C:\\Users\\ulano\\Desktop\\sites\\juno\\projects\\hue-are-you\\src\\BrandList.js":"5","C:\\Users\\ulano\\Desktop\\sites\\juno\\projects\\hue-are-you\\src\\Footer.js":"6"},{"size":517,"mtime":1607445860038,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1607445860038,"results":"9","hashOfConfig":"8"},{"size":11851,"mtime":1607575101317,"results":"10","hashOfConfig":"8"},{"size":27980,"mtime":1607445859969,"results":"11","hashOfConfig":"8"},{"size":549,"mtime":1607568362741,"results":"12","hashOfConfig":"8"},{"size":537,"mtime":1607568362741,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"jiofoc",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ulano\\Desktop\\sites\\juno\\projects\\hue-are-you\\src\\index.js",[],["28","29"],"C:\\Users\\ulano\\Desktop\\sites\\juno\\projects\\hue-are-you\\src\\reportWebVitals.js",[],"C:\\Users\\ulano\\Desktop\\sites\\juno\\projects\\hue-are-you\\src\\App.js",["30"],"import { Component } from 'react';\r\nimport video from './assets/smoke.mp4';\r\nimport paint from './assets/paint-splash.png';\r\nimport axios from 'axios';\r\nimport LoadingText from './LoadingText.js';\r\nimport BrandList from './BrandList.js';\r\nimport Footer from './Footer.js';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      play: false,\r\n      fadeOut: false,\r\n      mainText: false,\r\n      userBrandInput: '',\r\n      url: '',\r\n      title: '',\r\n      artist: '',\r\n      finalColours: [],\r\n      rijksColors: [\"#737C84\", \"#FBF6E1\", \"#2F4F4F\", \"#E0CC91\", \"#000000\", \"#B5BFCC\", \"#B35A1F\", \"#F6ECF3\", \"#981313\", \"#F49B7A\", \"#2F4F4F\", \"#DDA5AA\", \"#E09714\", \"#367614\", \"#4019B1\", \"#4279DB\", \"#DE4153\", \"#62AD77\", \"#8268DC\", \"#850085\", \"#DF4C93\" ],\r\n      brandNames: [\"almay\", \"alva\", \"anna sui\", \"annabelle\", \"benefit\", \"boosh\", \"burt's bees\", \"butter london\", \"c'est moi\", \"cargo cosmetics\", \"china glaze\", \"clinique\", \"coastal classic creation\", \"colourpop\", \"covergirl\", \"dalish\", \"deciem\", \"dior\", \"dr.hauschka\", \"e.l.f.\", \"essie\", \"fenty\", \"glossier\", \"green people\", \"iman\", \"l'oreal\", \"lotus cosmetics usa\", \"maia's mineral galaxy\", \"marcelle\", \"marienatie\", \"maybelline\", \"milani\", \"mineral fusion\", \"misa\", \"mistura\", \"moov\", \"nudus\", \"nyx\", \"orly\", \"pacifica\", \"penny lane organics\", \"physicians formula\", \"piggy paint\", \"pure anada\", \"rejuva minerals\", \"revlon\", \"sally b's skin yummies\", \"salon perfect\", \"sante\", \"sinful colours\", \"smashbox\", \"stila\", \"suncoat\", \"w3llpeople\", \"wet n wild\", \"zorah\", \"zorah biocosmetiques\"],\r\n      anchorClass: \"hidden\"\r\n    }\r\n  }\r\n\r\n  playVideo = () => {\r\n    this.setState({\r\n      play: true,\r\n      fadeOut: true,\r\n      mainText: true\r\n    })\r\n  }\r\n\r\n  handleBrandClick = (e) => {\r\n    // e.preventDefault();\r\n    console.log(e);\r\n    const brand = e.target.name\r\n    console.log(brand);\r\n    this.setState({\r\n      userBrandInput: brand\r\n    })\r\n  }\r\n\r\n  // what to do when user clicks desired colour\r\n  handleSwatch = (e) => {\r\n    e.preventDefault();\r\n    //  go to the art page\r\n    const chosenColor = e.target.className\r\n    console.log(chosenColor);\r\n    const nearestColor = require('nearest-color').from(this.state.rijksColors);\r\n    console.log(nearestColor(chosenColor));\r\n      axios({\r\n      url: `https://www.rijksmuseum.nl/api/en/collection`,\r\n      method: `GET`,\r\n      responseType: `json`,\r\n      params: {\r\n        key: 'wMbWv135',\r\n        'f.normalized32Colors.hex': nearestColor(chosenColor),\r\n        imgOnly: true,\r\n        // hex: chosenColor\r\n        // ^ or whatever hex value user chooses\r\n      }\r\n    })\r\n      .then((res) => {\r\n        // console.log(res)\r\n        const artResults = res.data.artObjects\r\n        // console.log(\"artResults\", artResults);\r\n        const artArray = [];\r\n        artResults.map((art, index) => {\r\n          \r\n          artArray.push({\r\n            arrUrl: res.data.artObjects[index].webImage.url,\r\n            arrTitle: res.data.artObjects[index].title,\r\n            arrArtist: res.data.artObjects[index].principalOrFirstMaker\r\n          })\r\n\r\n          // console.log(\"artArray\", artArray);\r\n         \r\n          \r\n          const randomIndex = Math.floor(Math.random() * artArray.length)\r\n          const artPiece = artArray[randomIndex]\r\n          this.setState({\r\n              \r\n          url: artPiece.arrUrl,\r\n          title: artPiece.arrTitle,\r\n          artist: artPiece.arrArtist\r\n            })\r\n          \r\n        })\r\n\r\n        // this.setState({\r\n        //   url: res.data.artObjects[0].webImage.url,\r\n        //   title: res.data.artObjects[0].title,\r\n        //   artist: res.data.artObjects[0].principalOrFirstMaker\r\n        // })\r\n      })\r\n  }\r\n\r\n  // store user brand input in state\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      userBrandInput: e.target.value,\r\n      anchorClass: \"hidden\"\r\n    })\r\n  };\r\n\r\n  // calls makeupApi, returns array of colour hex codes\r\n  makeupAxiosCall = () =>  {\r\n    axios({\r\n      url: `https://makeup-api.herokuapp.com/api/v1/products.json`,\r\n      method: `GET`,\r\n      responseType: `json`,\r\n      params: {\r\n        // brand: {this.userBrandInput} (maybe state or props)\r\n        brand: `${this.state.userBrandInput}`,\r\n      }\r\n    })\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        const colorsOnly = [];\r\n        for (let i in res.data) {\r\n          // console.log(res.data[i].product_colors);\r\n          const products = res.data[i].product_colors;\r\n          products.forEach((info) => {\r\n            // console.log(info);\r\n            colorsOnly.push(info.hex_value);\r\n            // console.log(colorsOnly);\r\n          })\r\n        }\r\n        // console.log(colorsOnly);\r\n        this.randomColours(colorsOnly)\r\n        this.setState({\r\n          colors: colorsOnly\r\n        })\r\n      })\r\n  }\r\n\r\n  // handles clicks on makeup brand anchor tags, populates 7 colour choices from makeup array call\r\n  handleBrandClick = (e) => {\r\n    // e.preventDefault();\r\n    const brand = e.target.name\r\n    console.log(brand);\r\n    this.setState({\r\n      userBrandInput: brand\r\n        })\r\n    this.makeupAxiosCall()\r\n  }\r\n\r\n   // handles clicks on search bar, populates 7 colour choices from makeup array call\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    //   compares user input to array of makeup brand names accepted by the API\r\n    if (this.state.brandNames.indexOf(this.state.userBrandInput) >=0) {\r\n      console.log(\"matches\");\r\n      // Makes Axios call if input matches accepted values\r\n      this.makeupAxiosCall()\r\n    }else{\r\n      console.log(\"no match\");\r\n      // show error options if no match\r\n      this.setState({\r\n        anchorClass: \"\"\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  randomColours = (array) => {\r\n    this.setState({\r\n      finalColours: []\r\n    })\r\n    const indexSize = 7\r\n    for (let i = 0; i <= (indexSize - 1); i++) {\r\n      const randomIndex = Math.floor(Math.random() * array.length)\r\n      if (array[randomIndex] !== array[i]) {\r\n        this.state.finalColours.push(array[randomIndex]);\r\n        // console.log(\"SwatchArray\", this.state.finalColours)\r\n      }\r\n    }\r\n    // sometimes repeats... how to fix?\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header id=\"start\" className=\"start\">\r\n          <div className=\"banner\">\r\n            <video src={video} autoPlay={this.state.play} loop=\"true\"></video>\r\n            <div className=\"search\">\r\n              <div onClick={this.playVideo} className={this.state.fadeOut ? 'hide' : null}>\r\n                <LoadingText />\r\n              </div>\r\n              <h1 className={this.state.mainText ? 'showText' : null}>Hue are you?</h1>\r\n              <form action=\"\" className={`search-box ${this.state.mainText ? 'showSearch' : null}`}>\r\n                <label htmlFor=\"search\" className=\"sr-only\">Search a make-up brand</label>\r\n                <input id=\"search\" className=\"search-text\" type=\"text\" placeholder=\"Search a make-up brand\" onChange={this.handleChange} />\r\n                <button className=\"search-button\" onClick={this.handleClick} type=\"submit\"><img src={paint} alt=\"paint splash icon\" /></button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"arrow\">\r\n              <a href=\"#brands\"><span></span></a>\r\n              <a href=\"#brands\"><span></span></a>\r\n            </div>\r\n          </div>\r\n            <a className={this.state.anchorClass} href=\"#brands\">This brand is not supported, click here for supported brands</a>\r\n        </header>\r\n\r\n        {/* Render swatches: */}\r\n        <section className=\"swatches\" id=\"swatchSection\">\r\n          <div className=\"wrapper information\">\r\n            <h2>Pick a color that speaks to you!</h2>\r\n            <ul>\r\n              {\r\n                this.state.finalColours.map((color, index) => {\r\n                  const styles = {\r\n                    backgroundColor: (color)\r\n                  };\r\n                  // console.log(color);\r\n                  return (\r\n                    <li className=\"swatch\" key={index}>\r\n                      <button style={styles} className={color} onClick={this.handleSwatch}>{color}</button>\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n            <div class=\"stick\">\r\n              <h3>{this.state.userBrandInput}</h3>\r\n              <div class=\"brush\"></div>\r\n              <div class=\"neck\"></div>\r\n              <div class=\"bristles\">\r\n                <div class=\"tip\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        \r\n        <section className=\"art\">\r\n          <div className=\"wrapper\">\r\n            <div className=\"artFrame\">\r\n              <div className=\"artCorset\">\r\n                <img src={this.state.url} alt={`Your makeup, perfectly paired with ${this.state.artist}'s work: '${this.state.title}'`}/>\r\n              </div>\r\n            </div>\r\n            <p>{this.state.artist}</p>\r\n            <p>{this.state.title}</p>\r\n          </div>\r\n        </section>\r\n\r\n        <section id=\"brands\">\r\n          <BrandList\r\n            brands={this.state.brandNames} click={this.handleBrandClick} />\r\n        </section>\r\n\r\n        <footer>\r\n          <Footer />\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n\r\n\r\n\r\n  //   what to do when user submits search\r\n  // handleClick = (e) => {\r\n  //   e.preventDefault();\r\n  //   //   go to the swatches, batches\r\n  //   axios({\r\n  //     url: `https://makeup-api.herokuapp.com/api/v1/products.json`,\r\n  //     method: `GET`,\r\n  //     responseType: `json`,\r\n  //     params: {\r\n  //       // brand: {this.userBrandInput} (maybe state or props)\r\n  //       brand: `${this.state.userBrandInput}`,\r\n  //     }\r\n  //   })\r\n  //     .then((res) => {\r\n  //       // console.log(res.data);\r\n  //       const colorsOnly = [];\r\n  //       for (let i in res.data) {\r\n  //         // console.log(res.data[i].product_colors);\r\n  //         const products = res.data[i].product_colors;\r\n  //         products.forEach((info) => {\r\n  //           // console.log(info);\r\n  //           colorsOnly.push(info.hex_value);\r\n  //           // console.log(colorsOnly);\r\n  //         })\r\n  //       }\r\n  //       // console.log(colorsOnly)\r\n  //       this.randomColours(colorsOnly)\r\n  //       if (colorsOnly.length > 7) {\r\n  //         const smallArray = colorsOnly.splice(0, 7);\r\n  //         this.setState({\r\n  //           finalColours: smallArray\r\n  //         })\r\n  //       } else {\r\n  //         const smallArray = colorsOnly;\r\n  //         this.setState({\r\n  //           colors: smallArray\r\n  //         })\r\n  //       }\r\n  //     })\r\n  // }\r\n\r\n  // shuffle = (array) => {\r\n  //   let currentIndex = array.length, temporaryValue, randomIndex;\r\n  //   // While there remain elements to shuffle...\r\n  //   while (0 !== currentIndex) {\r\n  //     // Pick a remaining element...\r\n  //     randomIndex = Math.floor(Math.random() * currentIndex);\r\n  //     currentIndex -= 1;\r\n  //     // And swap it with the current element.\r\n  //     temporaryValue = array[currentIndex];\r\n  //     array[currentIndex] = array[randomIndex];\r\n  //     array[randomIndex] = temporaryValue;\r\n  //   }\r\n  //   return array;\r\n  // }\r\n\r\n  //   what to do when user submits search\r\n\r\n\r\n\r\n  // randomColours = (array) => {\r\n  //   this.setState({\r\n  //     finalColours: []\r\n  //   })\r\n  //   const indexSize = 7\r\n  //   for (let i = 0; i <= (indexSize - 1); i++) {\r\n  //     const randomIndex = Math.floor(Math.random() * array.length)\r\n  //     if (array[randomIndex] !== array[i]) {\r\n  //       this.setState({\r\n  //         finalColours: array\r\n  //       })\r\n  //       // this.state.finalColours.push(array[randomIndex]);\r\n  //       console.log(this.state.finalColours)\r\n  //     }\r\n  //   }\r\n  // }","C:\\Users\\ulano\\Desktop\\sites\\juno\\projects\\hue-are-you\\src\\LoadingText.js",[],"C:\\Users\\ulano\\Desktop\\sites\\juno\\projects\\hue-are-you\\src\\BrandList.js",[],"C:\\Users\\ulano\\Desktop\\sites\\juno\\projects\\hue-are-you\\src\\Footer.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":71,"column":37,"nodeType":"37","messageId":"38","endLine":71,"endColumn":39},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]